# Fill in your name, student ID, and email address in this file.
# If you are working in a team, fill out the information for both team 
# members.

# SUBMIT THE LAB ONLY ONCE (from only one partner). This file will be
# automatically parsed in order to give both team members credit for the
# lab.

# You need to fill in the EXERCISE sections describing your solutions
# for Tasks 1, 2, and 3, as well as write the corresponding code.
# If you did one or more extra credit problems, indicate which one in the
# appropriate section below (remove the # sign first). If you have any other
# information you'd like us to know, please add it at the end of the file.

# Partner 1
Name: Wei-Wei Cheng
Student ID:  204134636
Email: chengw@ucla.edu

# Partner 2 (if you're working in a team)
Name: Isabel Martin
Student ID: 504168696
Email: isabelmartin@ucla.edu

# EXERCISE 1: What method you used to make your peer download and upload
#    files in parallel?  (~1-3 sentences)

We used forking to get the peer downloads and uploads in parallel.

# EXERCISE 2A: What conditions did you find and fix that would have
#    triggered a buffer overrun bug?  (~1-3 sentences each)

The trigger for the buffer overrun bug stems from trying to copy the filename from 
to a local variable without a bound. This is fixed by adding a bound when doing strcpy.

# EXERCISE 2B: What other robustness problems did you fix?  (~1-3 sentences
#    each)

Other fixes included increasing the task buffer size, allowing more connections to the tracker. We also set checks to make sure that the peer is not requesting a file that is not in the current directory. 

# EXERCISE 3: Describe the attacks you implemented for "evil mode".  Why
#    are they attacks?  (~3-10 sentences each)

Upload Attacks:
We set is so that the file name that's requested gets randomized from /dev/urandom. We also made it so that it would send an infinite stream of requests.

Download Attacks:
We did a DOS attack that opened up tons of sockets against peers.

# Extra credit problems
#Extra credit problem: MD5 Checker.

# Add any other information you'd like us to know below this line.
